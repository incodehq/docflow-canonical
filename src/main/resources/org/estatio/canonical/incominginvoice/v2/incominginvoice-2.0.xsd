<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one
  or more contributor license agreements.  See the NOTICE file
  distributed with this work for additional information
  regarding copyright ownership.  The ASF licenses this file
  to you under the Apache License, Version 2.0 (the
  "License"); you may not use this file except in compliance
  with the License.  You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing,
  software distributed under the License is distributed on an
  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  KIND, either express or implied.  See the License for the
  specific language governing permissions and limitations
  under the License.
-->
<xs:schema targetNamespace="http://canonical.estatio.org/incominginvoice/v2"
           elementFormDefault="qualified"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           xmlns="http://canonical.estatio.org/incominginvoice/v2"
           xmlns:com="http://isis.apache.org/schema/common"
           xmlns:cancom="http://canonical.estatio.org/common/v2"
           xmlns:ord="http://canonical.estatio.org/order/v2"
           xmlns:fin="http://canonical.estatio.org/financial/v2"
>

    <xs:import namespace="http://isis.apache.org/schema/common" schemaLocation="http://isis.apache.org/schema/common/common.xsd"/>
    <xs:import namespace="http://canonical.estatio.org/common/v2" schemaLocation="../../common/v2/common-2.0.xsd"/>
    <xs:import namespace="http://canonical.estatio.org/financial/v2" schemaLocation="../../financial/v2/bankAccount-2.0.xsd"/>
    <xs:import namespace="http://canonical.estatio.org/order/v2" schemaLocation="../../order/v2/order-2.0.xsd"/>

    <xs:element name="incomingInvoiceDto">
        <xs:annotation>
            <xs:documentation>Represents v2.0 of this schema (as per majorVersion.minorVersion @default attribute, below).
            </xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:complexContent>
                <xs:extension base="incomingInvoiceType">
                    <xs:sequence>
                        <xs:element name="majorVersion" type="xs:string" minOccurs="1" maxOccurs="1" default="2">
                            <xs:annotation>
                                <xs:documentation>The major version of the schema that an XML instance was created using.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                        <xs:element name="minorVersion" type="xs:string" minOccurs="1" maxOccurs="1" default="0">
                            <xs:annotation>
                                <xs:documentation>The minor version of the schema that an XML instance was created using.
                                </xs:documentation>
                            </xs:annotation>
                        </xs:element>
                    </xs:sequence>
                </xs:extension>
            </xs:complexContent>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="incomingInvoiceType">
        <xs:annotation>
            <xs:documentation>
                This is modelled on the required information to create an IncomingInvoice and to add an item to it.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="self" type="com:oidDto" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        System identifier for this incoming invoice instance in Estatio.

                        Optional because the DTO may be created from info in Coda, then uploaded to Estatio.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="codaIdentifier" type="cancom:codaDocKey" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>
                        The CODA identifier for this incoming invoice.

                        Optional because we don't want to insist that invoices are necessarily booked into Coda first,
                        the approach varies by country.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="invoiceNumber" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>The number by which the seller/supplier has identified the invoice.

                        Although this is called a number, note that it could contain non-digit characters, so really
                        is just a string.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="fixedAsset" type="com:oidDto" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Reference of the Property (fixed asset), eg &quot;CAR&quot;
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="atPath" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Application tenancy path for this invoice in Estatio.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="buyerPartyReference" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Party reference of the buyer (typically one of the ECP legal entities, eg &quot;IT01&quot;
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="sellerPartyReference" type="xs:string" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Party reference of the seller (aka supplier), typically element 6 of CODA, eg &quot;ITCL12345&quot;.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="invoiceDate" type="xs:date" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Date that this invoice was raised.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="dueDate" type="xs:date" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Date that this invoice is due to have been paid by the buyer.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="paymentMethod" type="fin:paymentMethod" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Method by which this invoice will be paid (one of an enumeration).
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="status" type="invoiceStatus" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Status of this incoming invoice.

                        This doesn't look right for an incoming invoice, but this is what we currently
                        have in IncomingInvoice.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="receivedDate" type="xs:date" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Date that this invoice was received for processing.

                        In the IncomingInvoice entity this corresponds to dateReceived.  Have renamed here for
                        consistency with dueDate and invoiceDate.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="bankAccountReference" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Identifier for the seller/supplier's bank account, to pay into.

                        This will (probably) be the IBAN.  Haven't dug into further because this is an optional
                        property of IncomingInvoice, and the getDocument SOAP call (ie transaction client) does not
                        provide us with anything we can use.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="approvalStatus" type="incomingInvoiceApprovalStatus" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Approval status of this incoming invoice.

                        Although mandatory in the underlying IncomingInvoice entity, is defined as optional in this
                        DTO because CODA does not know the status.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="items" type="incomingInvoiceItems" minOccurs="1" maxOccurs="1"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="incomingInvoiceItems">
        <xs:sequence>
            <xs:element name="item" type="incomingInvoiceItemType" minOccurs="0" maxOccurs="unbounded">
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="incomingInvoiceItemType">
        <xs:annotation>
            <xs:documentation>
                This is modelled on the required information to create an IncomingInvoiceItem (as part of an
                IncomingInvoice aggregate).

                The item's fixed asset is currently _not_ part of this definition, because Estatio always (seems to)
                use the fixed asset of the owning invoice (ie the Property).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="self" type="com:oidDto" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>System identifier for this incoming invoice item instance in Estatio.

                        (As for its parent invoice), this is optional because the DTO may be created from info in Coda, then uploaded to Estatio.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="type" type="ord:incomingInvoiceTypeType" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Reference to the charge (aka &quot;work item type&quot;) of this invoice item.

                        In the case of incoming invoices that originate from CODA, the work item type is inferred from
                        ref5.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="charge" type="com:oidDto" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Reference to the charge (aka &quot;work item type&quot;) of this invoice item.

                        In the case of incoming invoices that originate from CODA, the work item type is inferred from
                        ref5.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="description" type="xs:string" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Description of this incoming invoice item
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="netAmount" type="xs:decimal" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Net amount of this incoming invoice item.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="grossAmount" type="xs:decimal" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Gross amount of this incoming invoice item.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="vatAmount" type="xs:decimal" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>VAT amount for this incoming invoice item.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="tax" type="com:oidDto" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Reference to the tax, if known.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="dueDate" type="xs:date" minOccurs="1" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Date that this invoice item is due, if known.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="codaPeriod" type="cancom:codaPeriod" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Date that this invoice item is booked to in Coda, if known.

                        Note that this is not the same format string as the period property on the IncomingInvoice
                        entity, but it encodes the same information.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="project" type="com:oidDto" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Reference to the project, if known.

                        In the case of incoming invoices that originate from CODA, the project is inferred from
                        the final (4th) part of ref3, also stored redundantly in ref4.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="order" type="com:oidDto" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Reference to the order, if known.

                        In the case of incoming invoices that originate from CODA, the project is inferred from
                        the first part of ref3.

                        Unlike the other elements, the order is not required to create an IncomingInvoiceItem.  But
                        it's added here because the information _is_ known to CODA.  In the Estatio domain model, this
                        information can be used to (a) upsert an appropriate order item if needed (for the same
                        seller, property and project), and then (b) associate that order item with this invoice item
                        (cf the OrderItem_createInvoiceItemLink mixin).
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
            <xs:element name="budgetItem" type="com:oidDto" minOccurs="0" maxOccurs="1">
                <xs:annotation>
                    <xs:documentation>Reference to the (service charge) budget item, if known.
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="invoiceStatus">
        <xs:annotation>
            <xs:documentation>
                This doesn't look right for an incoming invoice, but this is what we currently have in IncomingInvoice
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="NEW"/>
            <xs:enumeration value="APPROVED"/>
            <xs:enumeration value="INVOICED"/>
            <xs:enumeration value="HISTORIC"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="incomingInvoiceApprovalStatus">
        <xs:annotation>
            <xs:documentation>
                This is intentionally a subset because we expect this to change in future.
                For now, just focusing on the possible states that CODA might inform Estatio.
            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="NEW"/>
            <xs:enumeration value="COMPLETED"/>
            <xs:enumeration value="PAYABLE"/>
            <xs:enumeration value="PAID"/>
        </xs:restriction>
    </xs:simpleType>


</xs:schema>
